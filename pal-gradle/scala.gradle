

// be sure that the repository exists
if (!rootProject.file("../peterlavalle.sbt/target/m2-repo/com/peterlavalle/peterlavalle_2.12/${pal.peterVersion}/peterlavalle_2.12-${pal.peterVersion}.jar").exists()) {
  println("I didn't find BASECODE, so I'm building it ...")
  //
  // if you got a funky error about cgc3-plugins around here? re-commit the project and keep `[deploy]` out of the description
  // ... though ... i might have to kill that
  //

  ant.java(
    jar: rootProject.file("../peterlavalle.sbt/sbt-launch.jar"),
    fork: true,
    dir: rootProject.file("../peterlavalle.sbt/")
  ) {
    arg(value: 'publish')
  }
  println('... done! (I think)')
}

apply from: rootProject.file('../pal-gradle/version.gradle')

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'groovy'

install.dependsOn(scaladoc)
publish.dependsOn(scaladoc)

compileScala.targetCompatibility = '1.8'

task deploy(dependsOn: [test, publish]) {
  group = 'verification'
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from (sourceSets.main.allJava + sourceSets.main.allScala + sourceSets.main.allGroovy + sourceSets.main.resources)
}

publishing {
  repositories {
    maven { url rootProject.file('../peterlavalle.sbt/target/m2-repo/') }
  }

  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact tasks.sourceJar
    }
  }
}

dependencies {
	compile "com.peterlavalle:peterlavalle_${pal.scalaFlavour}:${pal.peterVersion}"
	testCompile "com.peterlavalle:junit_${pal.scalaFlavour}:${pal.peterVersion}"
}
